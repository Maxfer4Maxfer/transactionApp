// Code generated by protoc-gen-go. DO NOT EDIT.
// source: repo.proto

package pb_repo

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ===========RegisterNode===========
type RegisterNodeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NodeIP               string   `protobuf:"bytes,2,opt,name=nodeIP,proto3" json:"nodeIP,omitempty"`
	NodePort             string   `protobuf:"bytes,3,opt,name=nodePort,proto3" json:"nodePort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeRequest) Reset()         { *m = RegisterNodeRequest{} }
func (m *RegisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRequest) ProtoMessage()    {}
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{0}
}

func (m *RegisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRequest.Unmarshal(m, b)
}
func (m *RegisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRequest.Marshal(b, m, deterministic)
}
func (m *RegisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRequest.Merge(m, src)
}
func (m *RegisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRequest.Size(m)
}
func (m *RegisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRequest proto.InternalMessageInfo

func (m *RegisterNodeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterNodeRequest) GetNodeIP() string {
	if m != nil {
		return m.NodeIP
	}
	return ""
}

func (m *RegisterNodeRequest) GetNodePort() string {
	if m != nil {
		return m.NodePort
	}
	return ""
}

type RegisterNodeReply struct {
	NodeID               string   `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeReply) Reset()         { *m = RegisterNodeReply{} }
func (m *RegisterNodeReply) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeReply) ProtoMessage()    {}
func (*RegisterNodeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{1}
}

func (m *RegisterNodeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeReply.Unmarshal(m, b)
}
func (m *RegisterNodeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeReply.Marshal(b, m, deterministic)
}
func (m *RegisterNodeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeReply.Merge(m, src)
}
func (m *RegisterNodeReply) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeReply.Size(m)
}
func (m *RegisterNodeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeReply.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeReply proto.InternalMessageInfo

func (m *RegisterNodeReply) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

func (m *RegisterNodeReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// ===========GetAllNodes===========
type GetAllNodesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllNodesRequest) Reset()         { *m = GetAllNodesRequest{} }
func (m *GetAllNodesRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllNodesRequest) ProtoMessage()    {}
func (*GetAllNodesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{2}
}

func (m *GetAllNodesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllNodesRequest.Unmarshal(m, b)
}
func (m *GetAllNodesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllNodesRequest.Marshal(b, m, deterministic)
}
func (m *GetAllNodesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllNodesRequest.Merge(m, src)
}
func (m *GetAllNodesRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllNodesRequest.Size(m)
}
func (m *GetAllNodesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllNodesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllNodesRequest proto.InternalMessageInfo

type GetAllNodesReply struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllNodesReply) Reset()         { *m = GetAllNodesReply{} }
func (m *GetAllNodesReply) String() string { return proto.CompactTextString(m) }
func (*GetAllNodesReply) ProtoMessage()    {}
func (*GetAllNodesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{3}
}

func (m *GetAllNodesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllNodesReply.Unmarshal(m, b)
}
func (m *GetAllNodesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllNodesReply.Marshal(b, m, deterministic)
}
func (m *GetAllNodesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllNodesReply.Merge(m, src)
}
func (m *GetAllNodesReply) XXX_Size() int {
	return xxx_messageInfo_GetAllNodesReply.Size(m)
}
func (m *GetAllNodesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllNodesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllNodesReply proto.InternalMessageInfo

func (m *GetAllNodesReply) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *GetAllNodesReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type Node struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IP                   string   `protobuf:"bytes,3,opt,name=IP,proto3" json:"IP,omitempty"`
	Port                 string   `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	JobsCount            int32    `protobuf:"varint,5,opt,name=jobsCount,proto3" json:"jobsCount,omitempty"`
	Jobs                 []*Job   `protobuf:"bytes,6,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{4}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Node) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Node) GetJobsCount() int32 {
	if m != nil {
		return m.JobsCount
	}
	return 0
}

func (m *Node) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type Job struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Per                  float32              `protobuf:"fixed32,2,opt,name=per,proto3" json:"per,omitempty"`
	Duration             float32              `protobuf:"fixed32,3,opt,name=duration,proto3" json:"duration,omitempty"`
	StartTime            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	FinishTime           *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finishTime,proto3" json:"finishTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{5}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Job) GetPer() float32 {
	if m != nil {
		return m.Per
	}
	return 0
}

func (m *Job) GetDuration() float32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Job) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Job) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

// ===========NewJob===========
type NewJobRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewJobRequest) Reset()         { *m = NewJobRequest{} }
func (m *NewJobRequest) String() string { return proto.CompactTextString(m) }
func (*NewJobRequest) ProtoMessage()    {}
func (*NewJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{6}
}

func (m *NewJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewJobRequest.Unmarshal(m, b)
}
func (m *NewJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewJobRequest.Marshal(b, m, deterministic)
}
func (m *NewJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewJobRequest.Merge(m, src)
}
func (m *NewJobRequest) XXX_Size() int {
	return xxx_messageInfo_NewJobRequest.Size(m)
}
func (m *NewJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewJobRequest proto.InternalMessageInfo

type NewJobReply struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewJobReply) Reset()         { *m = NewJobReply{} }
func (m *NewJobReply) String() string { return proto.CompactTextString(m) }
func (*NewJobReply) ProtoMessage()    {}
func (*NewJobReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6377fc15c39a05, []int{7}
}

func (m *NewJobReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewJobReply.Unmarshal(m, b)
}
func (m *NewJobReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewJobReply.Marshal(b, m, deterministic)
}
func (m *NewJobReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewJobReply.Merge(m, src)
}
func (m *NewJobReply) XXX_Size() int {
	return xxx_messageInfo_NewJobReply.Size(m)
}
func (m *NewJobReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NewJobReply.DiscardUnknown(m)
}

var xxx_messageInfo_NewJobReply proto.InternalMessageInfo

func (m *NewJobReply) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NewJobReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterNodeRequest)(nil), "pb.repo.RegisterNodeRequest")
	proto.RegisterType((*RegisterNodeReply)(nil), "pb.repo.RegisterNodeReply")
	proto.RegisterType((*GetAllNodesRequest)(nil), "pb.repo.GetAllNodesRequest")
	proto.RegisterType((*GetAllNodesReply)(nil), "pb.repo.GetAllNodesReply")
	proto.RegisterType((*Node)(nil), "pb.repo.Node")
	proto.RegisterType((*Job)(nil), "pb.repo.Job")
	proto.RegisterType((*NewJobRequest)(nil), "pb.repo.NewJobRequest")
	proto.RegisterType((*NewJobReply)(nil), "pb.repo.NewJobReply")
}

func init() { proto.RegisterFile("repo.proto", fileDescriptor_9a6377fc15c39a05) }

var fileDescriptor_9a6377fc15c39a05 = []byte{
	// 450 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x3f, 0x09, 0x64, 0xd2, 0x42, 0x18, 0xaa, 0xca, 0x98, 0x4a, 0x44, 0xe6, 0x92, 0x93,
	0x23, 0x85, 0x4b, 0x85, 0xc4, 0x01, 0x51, 0xa9, 0x4a, 0x0e, 0x55, 0xb4, 0xea, 0x95, 0x43, 0xac,
	0x4c, 0x83, 0x91, 0xe3, 0x5d, 0xec, 0x8d, 0x50, 0x5f, 0x82, 0xf7, 0xe1, 0x41, 0x78, 0x1f, 0x34,
	0xeb, 0xcd, 0xc6, 0x51, 0x8c, 0x7a, 0x9b, 0x9f, 0x6f, 0xbe, 0xfd, 0x66, 0xf6, 0x03, 0xa8, 0x48,
	0xc9, 0x54, 0x55, 0x52, 0x4b, 0x7c, 0xae, 0xb2, 0x94, 0xd3, 0xf8, 0xfd, 0x46, 0xca, 0x4d, 0x41,
	0x53, 0x53, 0xce, 0x76, 0x0f, 0x53, 0x9d, 0x6f, 0xa9, 0xd6, 0xab, 0xad, 0x6a, 0x90, 0xc9, 0x37,
	0x78, 0x23, 0x68, 0x93, 0xd7, 0x9a, 0xaa, 0x3b, 0xb9, 0x26, 0x41, 0x3f, 0x77, 0x54, 0x6b, 0x44,
	0x08, 0xcb, 0xd5, 0x96, 0x22, 0x6f, 0xec, 0x4d, 0x06, 0xc2, 0xc4, 0x78, 0x09, 0xfd, 0x52, 0xae,
	0x69, 0xbe, 0x8c, 0x7c, 0x53, 0xb5, 0x19, 0xc6, 0xf0, 0x82, 0xa3, 0xa5, 0xac, 0x74, 0x14, 0x98,
	0x8e, 0xcb, 0x93, 0xcf, 0xf0, 0xfa, 0x98, 0x5e, 0x15, 0x8f, 0x8e, 0xe8, 0xc6, 0xd2, 0xdb, 0x0c,
	0x47, 0x10, 0x50, 0x55, 0x59, 0x76, 0x0e, 0x93, 0x0b, 0xc0, 0x5b, 0xd2, 0x5f, 0x8a, 0x82, 0x87,
	0x6b, 0x2b, 0x2e, 0x99, 0xc3, 0xe8, 0xa8, 0xca, 0x9c, 0x1f, 0xa0, 0xc7, 0x2c, 0x75, 0xe4, 0x8d,
	0x83, 0xc9, 0x70, 0x76, 0x9e, 0xda, 0x0b, 0xa4, 0xe6, 0xd9, 0xa6, 0xd7, 0xf1, 0xc0, 0x6f, 0x0f,
	0x42, 0x46, 0xe0, 0x4b, 0xf0, 0x9d, 0x1e, 0x7f, 0x7e, 0xe3, 0x0e, 0xe0, 0xb7, 0x0e, 0xc0, 0x98,
	0xa5, 0x5d, 0xd1, 0x9f, 0x2f, 0x19, 0xa3, 0x78, 0xe9, 0xb0, 0xc1, 0x70, 0x8c, 0x57, 0x30, 0xf8,
	0x21, 0xb3, 0xfa, 0xab, 0xdc, 0x95, 0x3a, 0xea, 0x8d, 0xbd, 0x49, 0x4f, 0x1c, 0x0a, 0x38, 0x86,
	0x90, 0x93, 0xa8, 0x6f, 0x44, 0x9e, 0x39, 0x91, 0x0b, 0x99, 0x09, 0xd3, 0x49, 0xfe, 0x78, 0x10,
	0x2c, 0x64, 0x76, 0xa2, 0x67, 0x04, 0x81, 0xa2, 0x46, 0xba, 0x2f, 0x38, 0xe4, 0xb3, 0xaf, 0x77,
	0xd5, 0x4a, 0xe7, 0xb2, 0x34, 0x9a, 0x7c, 0xe1, 0x72, 0xbc, 0x86, 0x41, 0xad, 0x57, 0x95, 0xbe,
	0xcf, 0xb7, 0x64, 0xe4, 0x0d, 0x67, 0x71, 0xda, 0x58, 0x21, 0xdd, 0x5b, 0x21, 0xbd, 0xdf, 0x5b,
	0x41, 0x1c, 0xc0, 0xf8, 0x09, 0xe0, 0x21, 0x2f, 0xf3, 0xfa, 0xbb, 0x19, 0xed, 0x3d, 0x39, 0xda,
	0x42, 0x27, 0xaf, 0xe0, 0xfc, 0x8e, 0x7e, 0xf1, 0x2e, 0xf6, 0xa3, 0xa6, 0x30, 0xdc, 0x17, 0xf8,
	0x8f, 0x3a, 0x76, 0x3a, 0xfe, 0x8e, 0xd9, 0x5f, 0x0f, 0x42, 0x41, 0x4a, 0xe2, 0x02, 0xce, 0xda,
	0xbe, 0xc1, 0x2b, 0x77, 0xaa, 0x0e, 0xb7, 0xc6, 0xf1, 0x7f, 0xba, 0xaa, 0x78, 0x4c, 0x9e, 0xe1,
	0x2d, 0x0c, 0x5b, 0x76, 0xc1, 0x77, 0x0e, 0x7c, 0x6a, 0xad, 0xf8, 0x6d, 0x77, 0xb3, 0x21, 0xba,
	0x86, 0x7e, 0xb3, 0x0e, 0x5e, 0x1e, 0xec, 0xd5, 0x5e, 0x38, 0xbe, 0x38, 0xa9, 0x9b, 0xc9, 0xac,
	0x6f, 0x2e, 0xf7, 0xf1, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xe4, 0x89, 0xc0, 0xa4, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RepoClient is the client API for Repo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RepoClient interface {
	// Register new node
	RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeReply, error)
	// GetAllNodes returns all notes with jobs that registared in the Repository
	GetAllNodes(ctx context.Context, in *GetAllNodesRequest, opts ...grpc.CallOption) (*GetAllNodesReply, error)
	// NewJob create a new job on a free node. Returns a ID of a new created job
	NewJob(ctx context.Context, in *NewJobRequest, opts ...grpc.CallOption) (*NewJobReply, error)
}

type repoClient struct {
	cc *grpc.ClientConn
}

func NewRepoClient(cc *grpc.ClientConn) RepoClient {
	return &repoClient{cc}
}

func (c *repoClient) RegisterNode(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeReply, error) {
	out := new(RegisterNodeReply)
	err := c.cc.Invoke(ctx, "/pb.repo.Repo/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repoClient) GetAllNodes(ctx context.Context, in *GetAllNodesRequest, opts ...grpc.CallOption) (*GetAllNodesReply, error) {
	out := new(GetAllNodesReply)
	err := c.cc.Invoke(ctx, "/pb.repo.Repo/GetAllNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *repoClient) NewJob(ctx context.Context, in *NewJobRequest, opts ...grpc.CallOption) (*NewJobReply, error) {
	out := new(NewJobReply)
	err := c.cc.Invoke(ctx, "/pb.repo.Repo/NewJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RepoServer is the server API for Repo service.
type RepoServer interface {
	// Register new node
	RegisterNode(context.Context, *RegisterNodeRequest) (*RegisterNodeReply, error)
	// GetAllNodes returns all notes with jobs that registared in the Repository
	GetAllNodes(context.Context, *GetAllNodesRequest) (*GetAllNodesReply, error)
	// NewJob create a new job on a free node. Returns a ID of a new created job
	NewJob(context.Context, *NewJobRequest) (*NewJobReply, error)
}

func RegisterRepoServer(s *grpc.Server, srv RepoServer) {
	s.RegisterService(&_Repo_serviceDesc, srv)
}

func _Repo_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.repo.Repo/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoServer).RegisterNode(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Repo_GetAllNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllNodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoServer).GetAllNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.repo.Repo/GetAllNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoServer).GetAllNodes(ctx, req.(*GetAllNodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Repo_NewJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RepoServer).NewJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.repo.Repo/NewJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RepoServer).NewJob(ctx, req.(*NewJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Repo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.repo.Repo",
	HandlerType: (*RepoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNode",
			Handler:    _Repo_RegisterNode_Handler,
		},
		{
			MethodName: "GetAllNodes",
			Handler:    _Repo_GetAllNodes_Handler,
		},
		{
			MethodName: "NewJob",
			Handler:    _Repo_NewJob_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "repo.proto",
}
